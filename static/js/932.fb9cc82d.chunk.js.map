{"version":3,"file":"static/js/932.fb9cc82d.chunk.js","mappings":"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","sources":["components/ShoppingCart/ShoppingCart.styled.js","components/ShoppingCart/ShoppingCart.js","components/FormComponent/Form.styled.js","components/FormComponent/Form.js","pages/ShoppingCart.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CartProductsWrapper = styled.div`\n  width: 700px;\n  height: 350px;\n  overflow: scroll;\n  border: 1px solid black;\n\n  border: 1px solid black;\n  background-color: white;\n  margin-top: 25px;\n  position: relative;\n`;\nexport const StyledItem = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const CartProductsList = styled.ul`\n  list-style-type: none;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const ProductImgWrapper = styled.div`\n  width: 80px;\n  height: 120px;\n  overflow: hidden;\n  background-color: white;\n`;\n\nexport const ProductImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\nexport const StyledButton = styled.button`\n width: 100px;\n display:inline-block;\n  min-height: 20px;\n  background-color: blue;\n  color: white;\n  border: none;\n  cursor: pointer;\n  margin-right: 10px;\n  border-radius: 10px;\n  padding: 5px;\n  transition: all 0.3s ease;\n  margin-top: 15px;\n\n   &:hover {\n    background-color: darkblue;`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const TotalPrice = styled.p`\n  font-weight: 600;\n  position: absolute;\n  bottom: 0;\n  right: 30px;\n`;\n","import { nanoid } from 'nanoid';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCartProducts } from 'redux/selectors';\nimport { changeQuantity, removeFromCart } from 'redux/cartProductsSlice';\nimport {\n  CartProductsWrapper,\n  CartProductsList,\n  ProductImgWrapper,\n  ProductImage,\n  StyledItem,\n  StyledButton,\n  InfoWrapper,\n  TotalPrice,\n} from './ShoppingCart.styled';\nexport const ShoppingCart = () => {\n  const dispatch = useDispatch();\n  const cartProducts = useSelector(selectCartProducts);\n\n  const handleQuantityChange = (quantity, productId) => {\n    dispatch(changeQuantity({ quantity, productId }));\n  };\n\n  const handleRemoveFromCart = productId => {\n    dispatch(removeFromCart(productId));\n  };\n  const calculateTotal = () => {\n    let total = 0;\n    cartProducts.forEach(product => {\n      total += product.price * product.quantity;\n    });\n    return total;\n  };\n\n  return (\n    <CartProductsWrapper>\n      <CartProductsList>\n        {cartProducts.map(product => (\n          <StyledItem key={nanoid()}>\n            <ProductImgWrapper>\n              <ProductImage src={product.url} alt={product.name} />\n            </ProductImgWrapper>\n            <InfoWrapper>\n              <h2>{product.name}</h2>\n              <p>Price:${product.price}</p>\n              <input\n                type=\"number\"\n                value={product.quantity || 0}\n                onChange={e =>\n                  handleQuantityChange(e.target.value, product._id)\n                }\n              />\n              <StyledButton onClick={() => handleRemoveFromCart(product._id)}>\n                Remove\n              </StyledButton>\n            </InfoWrapper>\n          </StyledItem>\n        ))}\n      </CartProductsList>\n      <TotalPrice>Total price: ${calculateTotal().toFixed(2)}</TotalPrice>\n    </CartProductsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n  max-width: 400px;\n  margin-left: 30px;\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const ErrorMsg = styled.div`\n  color: red;\n  font-size: 14px;\n  margin-top: 5px;\n`;\n\nexport const SubmitButton = styled.button`\n width: 100px;\n display:inline-block;\n  min-height: 20px;\n  background-color: blue;\n  color: white;\n  border: none;\n  cursor: pointer;\n  margin-right: 10px;\n  border-radius: 10px;\n  padding: 5px;\n  transition: all 0.3s ease;\n  margin-top: 15px;\n  position: absolute;\n  bottom:150px;\n  right: 310px;\n  \n\n   &:hover {\n    background-color: darkblue;`;\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  FormWrapper,\n  FormGroup,\n  Label,\n  Input,\n  ErrorMsg,\n  SubmitButton,\n} from './Form.styled';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  phone: Yup.string().required('Phone is required'),\n  address: Yup.string().required('Address is required'),\n});\n\nexport const FormComponent = ({ handleSubmit, hasItemsInCart }) => {\n  return (\n    <FormWrapper>\n      <Formik\n        initialValues={{ name: '', email: '', phone: '', address: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <FormGroup>\n              <Label htmlFor=\"name\">Name</Label>\n              <Field type=\"text\" name=\"name\" as={Input} />\n              <ErrorMessage name=\"name\" component={ErrorMsg} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"email\">Email</Label>\n              <Field type=\"email\" name=\"email\" as={Input} />\n              <ErrorMessage name=\"email\" component={ErrorMsg} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"phone\">Phone</Label>\n              <Field type=\"text\" name=\"phone\" as={Input} />\n              <ErrorMessage name=\"phone\" component={ErrorMsg} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"address\">Address</Label>\n              <Field type=\"text\" name=\"address\" as={Input} />\n              <ErrorMessage name=\"address\" component={ErrorMsg} />\n            </FormGroup>\n            {hasItemsInCart && ( // Проверка наличия товаров в корзине\n              <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </SubmitButton>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </FormWrapper>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCartProducts } from 'redux/selectors';\nimport { removeAllFromCart } from 'redux/cartProductsSlice';\nimport { ShoppingCart } from 'components/ShoppingCart/ShoppingCart';\nimport { FormComponent } from 'components/FormComponent/Form';\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\n\nexport default function CartPage() {\n  const cartProducts = useSelector(selectCartProducts);\n  const dispatch = useDispatch();\n  const [hasItemsInCart, setHasItemsInCart] = useState(cartProducts.length > 0);\n  console.log(setHasItemsInCart);\n\n  const handleSubmit = async (values, actions) => {\n    const formData = values;\n\n    const productsData = cartProducts.map(product => ({\n      name: product.name,\n      id: product._id,\n      shopId: product.shopId,\n      quantity: product.quantity,\n    }));\n\n    const orderData = {\n      clientData: {\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        address: formData.address,\n      },\n      products: productsData,\n    };\n    try {\n      await axios.post(\n        'https://delivery-app-backend-nwp2.onrender.com/api/orders',\n        orderData\n      );\n      Notiflix.Notify.success('Your order was added successfully');\n      actions.resetForm();\n      dispatch(removeAllFromCart());\n    } catch (error) {\n      Notiflix.Notify.failure(error);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'flex-start', gap: '20px' }}>\n      <FormComponent\n        handleSubmit={handleSubmit}\n        hasItemsInCart={hasItemsInCart}\n      />\n      {cartProducts.length > 0 ? (\n        <ShoppingCart />\n      ) : (\n        <p style={{ fontWeight: '600' }}>Your shoping cart is empty</p>\n      )}\n    </div>\n  );\n}\n","export const selectCartProducts = state => state.cartProducts.products;\n"],"names":["CartProductsWrapper","styled","_templateObject","_taggedTemplateLiteral","StyledItem","_templateObject2","CartProductsList","_templateObject3","ProductImgWrapper","_templateObject4","ProductImage","_templateObject5","StyledButton","_templateObject6","InfoWrapper","_templateObject7","TotalPrice","_templateObject8","ShoppingCart","dispatch","useDispatch","cartProducts","useSelector","selectCartProducts","_jsxs","children","_jsx","map","product","src","url","alt","name","price","type","value","quantity","onChange","e","target","productId","_id","changeQuantity","onClick","removeFromCart","nanoid","total","forEach","calculateTotal","toFixed","FormWrapper","FormGroup","Label","Input","ErrorMsg","SubmitButton","validationSchema","Yup","shape","required","email","phone","address","FormComponent","_ref","handleSubmit","hasItemsInCart","Formik","initialValues","onSubmit","_ref2","isSubmitting","Form","htmlFor","Field","as","ErrorMessage","component","disabled","CartPage","_useState","useState","length","_useState2","_slicedToArray","setHasItemsInCart","console","log","_asyncToGenerator","_regeneratorRuntime","_callee","values","actions","formData","productsData","orderData","_context","prev","next","id","shopId","clientData","products","axios","Notiflix","resetForm","removeAllFromCart","t0","stop","_x","_x2","apply","arguments","style","display","justifyContent","gap","fontWeight","state"],"sourceRoot":""}